{
    "syntax": "scss",
    "plugins": [
        "stylelint-order",
        "stylelint-selector-bem-pattern"
    ],
    "rules": {
        "indentation": 4,
        "plugin/selector-bem-pattern": [
            {
                "implicitComponents": true,
                "componentName": "[-a-z]+",
                "componentSelectors": {
                    "initial": "^(\\.{componentName}(__[a-z]+|--[-a-z0-9]+|__[-a-z]+--[-a-z0-9]+|.[-a-z]+|__[a-z]+.[-a-z]+)?)$",
                    "combined": "^.+$"
                },
                "ignoreSelectors": [
                    "^\\.(no-)?js(-modal-open)?$",
                    "a(\\[[a-z]+|:[a-z]+)?",
                    "h[1-6]",
                    "pre",
                    "blockquote",
                    "thead",
                    "tr",
                    "img",
                    "img",
                    "p",
                    "table",
                    "^&:empty",
                    "#{\\$[-a-z]+}__[-a-z]+",
                    "^\\*$"
                ],
            },
            {
                "severity": "warning",
                "message": "BEM Error"
            }
        ],
        "order/order": [
            "custom-properties", {
                "type": "at-rule",
                "name": "include"
            },
            "declarations", {
                "type": "at-rule",
                "name": "media"
            },
            {
                "type": "rule",
                "selector": "^&:\\w+$"
            },
            {
                "type": "rule",
                "selector": "^\\.[-_a-zA-Z0-9]+"
            },
            {
                "type": "rule",
                "selector": "^&__[-a-z0-9]+"
            },
            {
                "type": "rule",
                "selector": "^&--[-a-z0-9]+"
            }
        ],
        "order/properties-order": [
            [{
                "properties": [
                    "content",
                    "box-sizing",
                    "display",
                    "flex",
                    "flex-wrap",
                    "flex-basis",
                    "flex-direction",
                    "flex-flow",
                    "flex-grow",
                    "flex-shrink",
                    "align-content",
                    "align-items",
                    "align-self",
                    "justify-content",
                    "order",
                    "grid",
                    "grid-area",
                    "grid-auto-*",
                    "grid-column",
                    "grid-column-*",
                    "grid-gap",
                    "grid-row",
                    "grid-row-*",
                    "grid-template",
                    "grid-template-*",
                    "position",
                    "z-index",
                    "top",
                    "right",
                    "bottom",
                    "left",
                    "width",
                    "min-width",
                    "max-width",
                    "height",
                    "min-height",
                    "max-height",
                    "overflow",
                    "overflow-*",
                    "margin",
                    "margin-*",
                    "border",
                    "border-*",
                    "padding",
                    "padding-*",
                ]
            },
                {
                    "properties": [
                        "transform",
                        "transform-*",
                        "backface-visibility",
                        "perspective",
                        "perspective-origin",
                        "transition",
                        "transition-*",
                        "animation",
                        "animation-*",
                    ],
                }
            ]],
        "color-hex-case": ["lower", {
            "severity": "warning",
            "message": "HEX-color error"
        }],
        "color-named": ["never", {
            "message": "Colors cannot be written with keywords"
        }],
        "color-no-invalid-hex": [true, {
            "message": "Hex color spelling error"
        }],

        "no-duplicate-at-import-rules": [true, {
            "message": "There should be no re-import of the file"
        }],
        "no-duplicate-selectors": [true, {
            "message": "The same selector must not be duplicated"
        }],
        "no-extra-semicolons": [true, {
            "message": "Two semicolons in a row should not be"
        }],

        "font-family-name-quotes": ["always-where-recommended", {
            "message": "Font name should be quoted"
        }],
        "font-family-no-duplicate-names": [true, {
            "message": "You cannot duplicate the same font"
        }],
        "font-family-no-missing-generic-family-keyword": [true, {
            "message": "Must specify sans-serif or serif"
        }],
        "font-weight-notation": ["numeric", {
            "message": "Font weight must be indicated with a number",
            ignore: ["relative"]
        }],

        "number-no-trailing-zeros": [true, {
            "message": "Extra (optional) zero in the fraction"
        }],

        "declaration-colon-space-after": ["always-single-line", {
            "message": "One space after the colon"
        }],
"declaration-colon-space-before": ["never", {
            "message": "Do not put a space before the colon"
        }],
        "declaration-no-important": [true, {
            "severity": "warning",
            "message": "Use! important with care"
        }],
        "declaration-block-no-duplicate-properties": [true, {
            "message": "Rules must not be repeated"
        }],
        "declaration-block-no-shorthand-property-overrides": [true, {
            "message": "This property interrupts another"
        }],
        "declaration-block-semicolon-newline-after": ["always", {
            "message": "Hyphenation required after semicolon"
        }],
        "declaration-block-single-line-max-declarations": [1, {
            "message": "There must be one rule on one line"
        }],
        "declaration-block-trailing-semicolon": ["always", {
            "message": "Each property must end with a semicolon"
        }],
        "declaration-block-semicolon-newline-before": ["never-multi-line", {
            "message": "Hyphenation before the character; invalid"
        }],
        "declaration-block-semicolon-space-before": ["never", {
            "message": "Space before character; invalid"
        }],

        "block-closing-brace-empty-line-before": ["never", {
            "message": "There should be no empty line before"} "
        }],
        "block-closing-brace-newline-after": ["always", {
            "message": "There should be no carry after"} "
        }],
        "block-closing-brace-newline-before": ["always", {
            "message": "There must be a hyphen before"} "
        }],
        "block-opening-brace-newline-after": ["always", {
            "message": "After" {"there should be a carry"
        }],
        "block-opening-brace-space-before": ["always", {
            "message": "There must be one space before" {"
        }],

        "property-case": ["lower", {
            "message": "Property values ​​should be lowercase"
        }],
        "property-no-unknown": [true, {
            "message": "This property does not exist"
        }],

        "unit-case": ["lower", {
            "message": "Units should be written in lower case"
        }],
        "unit-no-unknown": [true, {
            "message": "There are no such units of measure"
        }],

        "value-keyword-case": ["lower", {
            "message": "Property values ​​should be in lowercase",
            "ignoreProperties": ["/ font- /",]
        }],
        "value-list-comma-space-after": ["always-single-line", {
            "message": "A space is required in the decimal places"
        }],
        "value-list-comma-space-before": ["never", {
            "message": "Space is not allowed before the comma"
        }],
        "value-list-comma-newline-after": ["always-multi-line", {
            "message": "Property values ​​must not be hyphenated"
        }],
        "value-list-comma-newline-before": ["never-multi-line", {
            "message": "Property values ​​must not be hyphenated"
        }],

        "string-no-newline": [true, {
            "message": "No line breaks in string data"
        }],
        "string-quotes": ["double", {
            "message": "There are double quotes in the project"
        }],

        "selector-attribute-operator-blacklist": [["id"], {
            "message": "Cannot be used to style IDs"
        }],
        "selector-pseudo-class-case": ["lower", {
            "message": "Pseudo-classes need to be written in lowercase letters"
        }],
        "selector-pseudo-class-no-unknown": [true, {
            "message": "There is no such pseudo-class"
        }],
        "selector-pseudo-class-parentheses-space-inside": ["never", {
            "message": "There must be no spaces inside brackets in pseudo-selectors"
        }],
        "selector-pseudo-element-case": ["lower", {
            "message": "Pseudo-elements must be written in lowercase letters"
        }],
        "selector-pseudo-element-no-unknown": [true, {
            "message": "There is no such pseudo-element"
        }],
        "selector-type-case": ["lower", {
            "message": "Selectors must be lowercase"
        }],
        "selector-type-no-unknown": [true, {
            "message": "There is no such selector"
        }],
        "selector-max-empty-lines": [0, {
            "message": "Empty lines in selectors are not allowed"
        }],
        "selector-list-comma-newline-after": ["never-multi-line", {
            "message": "After the comma, line break is required"
        }],
        "selector-list-comma-newline-before": ["never-multi-line", {
            "message": "There must be no line breaks before the comma"
        }],
        "selector-list-comma-space-after": ["always-single-line", {
            "message": "There must be a space after the comma"
        }],
        "selector-list-comma-space-before": ["never", {
            "message": "There must be no space before the comma"
        }],
        "selector-descendant-combinator-no-non-space": [true, {
            "message": "Combined selectors need to be separated by one space"
        }],

        "length-zero-no-unit": [true, {
            "message": "Units are not indicated if the value is zero"
        }],

        "function-comma-space-after": ["always", {
            "message": "A space is required after the decimal point"
        }],
        "function-comma-space-before": ["never", {
            "message": "There should be no space before the comma"
        }],
        "function-comma-newline-before": ["never-multi-line", {
            "message": "There should not be a comma before hyphenation"
        }],
        "function-comma-newline-after": ["never-multi-line", {
            "message": "There should not be a comma after the transfer"
        }],
        "function-parentheses-newline-inside": ["never-multi-line", {
            "message": "There should be no parenthesis after the transfer"
        }],
        "function-max-empty-lines": [0, {
            "message": "There should be no empty lines in functions"
        }],
        "function-name-case": ["lower", {
            "message": "Function names should be lowercase"
        }],
        "function-whitespace-after": ["always", {
            "message": "There must be spaces between functions"
        }],

        "media-feature-parentheses-space-inside": ["never", {
            "message": "Spaces after" ("and before") "cannot be used"
        }]
    }
}